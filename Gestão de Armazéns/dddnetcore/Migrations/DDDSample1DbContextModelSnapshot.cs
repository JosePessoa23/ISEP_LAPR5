// <auto-generated />
using DDDSample1.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDDNetCore.Migrations
{
    [DbContext(typeof(DDDSample1DbContext))]
    partial class DDDSample1DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DDDSample1.Domain.Armazens.Armazem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Armazens");
                });

            modelBuilder.Entity("DDDSample1.Domain.Categories.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DDDSample1.Domain.Entregas.Entrega", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("IdLoja")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Entregas");
                });

            modelBuilder.Entity("DDDSample1.Domain.Families.Family", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("DDDSample1.Domain.Products.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DDDSample1.Domain.Armazens.Armazem", b =>
                {
                    b.OwnsOne("DDDSample1.Domain.Armazens.Coordenadas", "Coordenadas", b1 =>
                        {
                            b1.Property<string>("ArmazemId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<float>("Altitude")
                                .HasColumnType("real");

                            b1.Property<float>("Latitude")
                                .HasColumnType("real");

                            b1.Property<float>("Longitude")
                                .HasColumnType("real");

                            b1.HasKey("ArmazemId");

                            b1.ToTable("Armazens");

                            b1.WithOwner()
                                .HasForeignKey("ArmazemId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Armazens.Designacao", "Designacao", b1 =>
                        {
                            b1.Property<string>("ArmazemId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("DesignacaoText")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ArmazemId");

                            b1.ToTable("Armazens");

                            b1.WithOwner()
                                .HasForeignKey("ArmazemId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Armazens.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<string>("ArmazemId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("CodigoPostal")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Localidade")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Morada")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Pais")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ArmazemId");

                            b1.ToTable("Armazens");

                            b1.WithOwner()
                                .HasForeignKey("ArmazemId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Armazens.IdProprio", "IdProprio", b1 =>
                        {
                            b1.Property<string>("ArmazemId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Codigo")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ArmazemId");

                            b1.ToTable("Armazens");

                            b1.WithOwner()
                                .HasForeignKey("ArmazemId");
                        });

                    b.Navigation("Coordenadas");

                    b.Navigation("Designacao");

                    b.Navigation("Endereco");

                    b.Navigation("IdProprio");
                });

            modelBuilder.Entity("DDDSample1.Domain.Entregas.Entrega", b =>
                {
                    b.OwnsOne("DDDSample1.Domain.Entregas.Data", "Data", b1 =>
                        {
                            b1.Property<string>("EntregaId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("data")
                                .HasColumnType("int");

                            b1.HasKey("EntregaId");

                            b1.ToTable("Entregas");

                            b1.WithOwner()
                                .HasForeignKey("EntregaId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Entregas.Peso", "Peso", b1 =>
                        {
                            b1.Property<string>("EntregaId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<float>("peso")
                                .HasColumnType("real");

                            b1.HasKey("EntregaId");

                            b1.ToTable("Entregas");

                            b1.WithOwner()
                                .HasForeignKey("EntregaId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Entregas.TempoCarga", "TempoCarga", b1 =>
                        {
                            b1.Property<string>("EntregaId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("tempoCarga")
                                .HasColumnType("int");

                            b1.HasKey("EntregaId");

                            b1.ToTable("Entregas");

                            b1.WithOwner()
                                .HasForeignKey("EntregaId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Entregas.TempoDescarga", "TempoDescarga", b1 =>
                        {
                            b1.Property<string>("EntregaId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("tempoDescarga")
                                .HasColumnType("int");

                            b1.HasKey("EntregaId");

                            b1.ToTable("Entregas");

                            b1.WithOwner()
                                .HasForeignKey("EntregaId");
                        });

                    b.Navigation("Data");

                    b.Navigation("Peso");

                    b.Navigation("TempoCarga");

                    b.Navigation("TempoDescarga");
                });
#pragma warning restore 612, 618
        }
    }
}
